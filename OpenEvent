/**
 * 
 */

/**
 * @author Malte Olofsson, olomal-8
 *
 */
public class OpenEvent extends Event {
	private Supermarket mySupermarket;
	private double happeningTime;
	private double closingTime;
	private CloseEvent closeEvent;
	private ExponentialRandomStream randomArrival;
	private ArrivalEvent arrivalEvent;
	
	public OpenEvent(Supermarket s, EventQueue eventQueue) {
		this.mySupermarket = s;
		happeningTime = 0;
	}
	public void effekt(){
		
		mySupermarket.setOpen();
		closingTime = mySupermarket.getClosingTime();
		
		closeEvent = new CloseEvent(mySupermarket); //Skapar ett closeEvent direkt när butiken öppnar
		eventQueue.addEvent(closeEvent);
		double arrivalTime = 0;
		do { //Skapar alla arrivalEvents när butiken öppnar.
			arrivalTime += randomArrival.next();
			arrivalEvent = new ArrivalEvent(mySupermarket, arrivalTime, eventQueue);
			eventQueue.addEvent(arrival);
		}while(arrivalTime < closingTime);
		
	}

	
	public double getTime() {
		
		return happeningTime;
	}
}

