public class PayEvent extends Event{
	private Supermarket s;
	private EventQueue eventQueue;
	private Kassa currentKassa;
	private double happeningTime;
	private UniformRandomStream randomTime;
	private Customer customer;
	private String eventName = "Pay";
	private State  state;
	
	
	public PayEvent(Supermarket s, EventQueue eventQueue, Customer customer, double currentTime, Kassa currentKassa, State state) {
		this.s = s;
		
		this.happeningTime = currentTime;
		this.currentKassa = currentKassa;
		this.customer = customer;
		this.state = state;
		this.eventQueue = eventQueue;
		
	}
	
	void effekt() {
		state.setCurrentEvent(this);
		s.updateTime(happeningTime);
		s.addTimeInQueue(s.getCurrentTime(), s.getPastEventTime());
		s.addKassaEmpty(s.getCurrentTime(), s.getPastEventTime());
		
		s.addMoneyEarned();
		s.removeCustomersInStore();
		
		
		
		
		if (s.getCustomerQueue().size() > 0) {
			Customer c1 = s.getFirstCustomerInQueue();
			eventQueue.addEvent(new PayEvent(s,eventQueue,c1, happeningTime+s.getPayTime().next(), currentKassa, state));
		} else {
			currentKassa.setTrue();
		}
		
		s.setFinalEventTime(happeningTime);
		
		
	}

	
	public double getTime() {
		return happeningTime;
	}
	public String getEventName(){
		return eventName;
	}
	
	public int getCustomerNr() {
		return customer.getCustomerNumber();
	}

}
